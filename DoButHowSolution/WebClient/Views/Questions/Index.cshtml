@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/js/questionsViewModel.js" asp-append-version="true"></script>

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
<div class="questionsContainer">
    @if (User.Identity.IsAuthenticated)
    {
        <ul id="questionsNavBar" class="nav nav-pills">
            @switch ((string)(ViewBag.focus))
            {
                case "QuestionsToApprove":
                    <li><a asp-action="">All questions</a></li>
                    <li><a asp-action="MyQuestions">My questions</a></li>
                    @if (AuthorizationService.AuthorizeAsync(User, "RequireAtLeastModeratorRole").Result.Succeeded)
                    {
                        <li class="active"><a asp-action="QuestionsToApprove">Questions to approve</a></li>
                    }
                    break;
                case "MyQuestions":
                    <li><a asp-action="">All questions</a></li>
                    <li class="active"><a asp-action="MyQuestions">My questions</a></li>
                    @if (AuthorizationService.AuthorizeAsync(User, "RequireAtLeastModeratorRole").Result.Succeeded)
                    {
                        <li><a asp-action="QuestionsToApprove">Questions to approve</a></li>
                    }
                    break;
                default:
                    <li class="active"><a asp-action="">All questions</a></li>
                    <li><a asp-action="MyQuestions">My questions</a></li>
                    @if (AuthorizationService.AuthorizeAsync(User, "RequireAtLeastModeratorRole").Result.Succeeded)
                    {
                        <li><a asp-action="QuestionsToApprove">Questions to approve</a></li>
                    }
                    break;
            }
        </ul>
    }
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="AskQuestion">
            <div class="btn btn-primary" style="right:0px; display:inline; position:absolute">
                <i class="material-icons alignMiddle">help_outline</i>
                <div class="position-inline">Ask a Question</div>
            </div>
        </a>
    }
    <br />
    <br />
    <br />
    <div id="questionsContainer">
        <ul class="list-container" data-bind="template: {name:'questionTemplate', foreach: window.questionsViewModel.questions }"></ul>
        <!-- ko if: window.questionsViewModel.noMoreItems -->
        <p data-bind="text: 'There are no questions!'"></p>
        <!-- /ko -->
    </div>
    <p id="loading" class="loading-container">
        <img src="~/images/loading.gif" alt="Loading…" />
    </p>

</div>

<script type="text/html" id="questionTemplate">
    <li class="list-item">
        <a data-bind="attr:{href:utils.baseUrl()+utils.separator() + utils.question() + utils.separator() + $data.questionId}">
            <div class="questionTitle" data-bind="text: $data.title"></div>
            <p class="questionDescription" data-bind="text: $data.description"></p>
            @if (User.Identity.IsAuthenticated && AuthorizationService.AuthorizeAsync(User, "RequireAtLeastModeratorRole").Result.Succeeded)
            {
                <div style="float:right" data-bind="text: $data.status"></div>
            }
            <br />
        </a>
    </li>
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_QuestionScriptsPartial"); }
}

